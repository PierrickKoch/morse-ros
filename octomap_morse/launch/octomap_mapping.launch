<!-- Launch octomap_server for mapping: Listens to incoming PointCloud2 data 
and incrementally builds an octomap. The data is sent out in different representations. -->
<launch>
	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
		<param name="resolution" value="0.05" />
		
		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
		<param name="frame_id" type="string" value="map" />
		
		<!-- maximum range to integrate (speedup!) -->
		<param name="max_sensor_range" value="5.0" />
		
		<!-- data source to integrate (PointCloud2) -->
		<remap from="cloud_in" to="/robot/camera" />
	
	</node>
	<node pkg="tf" type="static_transform_publisher" name="tf_map" args="0 0 0 0 0 0 map odom 100" />
	<node pkg="tf" type="static_transform_publisher" name="tf_rob" args="0 0 0 0 0 0 base_footprint base_link 100" />
	<node pkg="octomap_morse" type="map.py" name="map_kb">
		<remap from="cmd" to="/robot/motion" />
		<remap from="map" to="/projected_map" />
	</node>
</launch>
